{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n  return typeof val === \"function\";\n}\n\nexport function isObject(val){\n    return typeof val === 'object' && val !== null\n}","// Objec.create 模拟\n// function ObjectCreate(proto){\n//     function F(){}\n//     F.prototype = proto\n//     return new F();\n// }\nlet oldArrayPrototype = Array.prototype;\nexport let arrayMethods = Object.create(Array.prototype);\n// arrayMethods.__proto__ = Array.prototype // 就是个继承\n\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\nmethods.forEach((method) => {\n  // 用户调用的是以上的7个方法，会用我自己重写的，否则会用原来的\n  arrayMethods[method] = function (...args) {\n    // 相当于调用原来的push, this --> 谁调用就指向谁\n    oldArrayPrototype[method].call(this, ...args);\n\n    // args就是新增的内容\n    // push splice unshift\n    let inserted;\n    let ob = this.__ob__ // 这里获取的就是Observer实例\n    switch (method) {\n      case \"push\":\n        inserted = args\n        break;\n      case \"splice\":\n        inserted = args.slice(2)\n        break;\n      case \"unshift\":\n        inserted = args\n        break;\n    }\n    // 如果有新增的内容，继续进行劫持\n    // 需要观测数组中的每一项，而不是数组，\n    // this是那个数组，index.js文件中的也是那个数组\n    if(inserted){\n        ob.observeArray(inserted)\n    }\n  };\n});\n","import { isObject } from \"../utils\";\nimport { arrayMethods } from \"./array\";\n\nclass Observer {\n  constructor(data) {\n    // this指向Observer实例\n    // data.__ob__ 等于当前的Observer实例\n    // 所有被劫持的属性都有__ob__\n    // data.__ob__ 在这里会被不停的观测\n    // 将data.__ob__ 变成不可枚举的属性\n    data.__ob__ = this;\n    Object.defineProperty(data,'__ob__',{\n        value: this,\n        enumerable: false\n    })\n\n    if (Array.isArray(data)) {\n      // 数组劫持的逻辑，对数组原来的方法进行改写，切片编程\n      // console.log(arrayMethods) // Object.create(Array.prototype)\n      // 如果数组中的数据是对象类型，需要监控对象的变化\n      data.__proto__ = arrayMethods;\n      // 数组中的对象进行劫持\n      this.observeArray(data);\n    } else {\n      // 对象劫持的逻辑\n      this.walk(data);\n    }\n  }\n  // 数组观测\n  observeArray(data) {\n    // 对数组中数组 或者是 数组中的对象再次劫持，递归\n    data.forEach((item) => {\n      observe(item);\n    });\n  }\n  // walk --> 走，步行\n  walk(data) {\n    // Object.keys不会遍历到原型链，取到的都是私有属性\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n// vue 会对对象进行遍历，将每个属性 用Object.defineProperty 重新定义，所以性能不好\n// 以下的definedReactive是一个闭包，每个属性定义完成以后会在实例上定义上get xxx和set xxx\n// 所以defineReactive执行完毕之后 Object.definedProperty的get/set带着defineReactive的AO\nfunction defineReactive(data, key, value) {\n  // value有可能还是对象\n  observe(value);\n  Object.defineProperty(data, key, {\n    get() {\n      // console.log('getter',value)\n      return value;\n    },\n    set(newValue) {\n      // 设置的新值有可能还是对象\n      observe(value);\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  if (!isObject(data)) {\n    return;\n  }\n  // data.__ob__ 代表已经被观测过了\n  if (data.__ob__) {\n    return;\n  }\n  // 创建一个观测者\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nimport { isFunction } from \"./utils\";\n\nexport function initState(vm) {\n  // 状态的初始化\n  const options = vm.$options;\n  // props在data之前\n  if (options.props) {\n  }\n\n  if (options.methods) {\n  }\n\n  if (options.data) {\n    initData(vm);\n  }\n  if (options.computed) {\n  }\n\n  if (options.watch) {\n  }\n}\n\n/**\n * \n * @param {*} vm vue实例\n * @param {*} target 去哪里取值\n * @param {*} key key值\n */\nfunction proxy(vm,target,key){\n  // vm上定义key, vm.xxx的时候帮我们从vm._data.xxx中获取\n  Object.defineProperty(vm,key,{\n    get(){\n      return vm[target][key]\n    },\n    set(newVal){\n      vm[target][key] = newVal\n    }\n  })\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data;\n  data = vm._data = isFunction(data) ? data.call(this) : data;\n  // 代理取值\n  for (const key in data) {\n    proxy(vm,'_data',key)\n  }\n  // 数据观测\n  observe(data);\n}\n","import { initState } from \"./state\";\n\n// 表示在vue的基础上做一次混合的操作\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        // el 和 data\n        const vm = this;\n        vm.$options = options // 后续对options进行扩展\n            \n        // 对数据进行初始化 watch,props,computed,data ...\n        initState(vm); // vm.$options.data  vm.$options.computed ...\n    }\n}","import { initMixin } from \"./init\";\n\nfunction Vue(options){\n    // options为用户传入的选项\n    this._init(options); // 初始化操作\n}\ninitMixin(Vue);\nexport default Vue;"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newValue","initState","vm","options","$options","props","initData","computed","watch","proxy","target","newVal","_data","initMixin","Vue","_init"],"mappings":"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"}